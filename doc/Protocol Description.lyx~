#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrartcl
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "A Client-Server protocol for the game of Connect4"
\pdf_author "Wouter Timmermans"
\pdf_subject "Description of a client server protocol for the game Connect4"
\pdf_keywords "protocol connect4 inf3"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
A Client-Server protocol for the game of Connect4
\end_layout

\begin_layout Subtitle
Software systems 2014-2015
\end_layout

\begin_layout Author
Wouter Timmermans 
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Use of keywords
\end_layout

\begin_layout Standard
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
 "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are
 to be interpreted as described in RFC 2119
\begin_inset CommandInset citation
LatexCommand cite
key "rfc2119"

\end_inset

.
\end_layout

\begin_layout Section
Notation
\end_layout

\begin_layout Standard
The following description of the protocol is in Extended Backus-Naur Form
\begin_inset CommandInset citation
LatexCommand cite
key "iso14977"

\end_inset

.
 In case the reader isn't familiar with this notation, a short summary is
 given below.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
{} list of zero or more items
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
[] optional symbol
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
| choice between elements or symbols
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
, concatenation
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
3* repetition 3 times (can of course be an arbitrary number)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
; end of rule
\end_layout

\begin_layout Section
General types
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
lowercase = 
\begin_inset Quotes eld
\end_inset

a
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

b
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

c
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

d
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

e
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

f
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

g
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

h
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

i
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

j
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

k
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

l
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

m
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

n
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

o
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

p
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

q
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

r
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

s
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

t
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

u
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

v
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

w
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

y
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

z
\begin_inset Quotes erd
\end_inset

 ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
uppercase = 
\begin_inset Quotes eld
\end_inset

A
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

B
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

C
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

D
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

E
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

F
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

G
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

H
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

I
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

J
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

K
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

L
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

M
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

N
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

O
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

P
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

Q
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

R
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

S
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

T
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

U
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

V
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

W
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

X
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

Y
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

Z
\begin_inset Quotes erd
\end_inset

 ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
numeric = 
\begin_inset Quotes eld
\end_inset

0
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

1
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

2
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

3
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

4
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

5
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

6
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

7
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

8
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

9
\begin_inset Quotes erd
\end_inset

 ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
space = 
\begin_inset Quotes eld
\end_inset

 
\begin_inset Quotes eld
\end_inset

 ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
col = 
\begin_inset Quotes eld
\end_inset

0
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

1
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

2
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

3
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

4
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

5
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

6
\begin_inset Quotes erd
\end_inset

 ; (The column parameter is zero based)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
boolean-answer = 
\begin_inset Quotes eld
\end_inset

yes
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

no
\begin_inset Quotes erd
\end_inset

 ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
newline = 
\begin_inset Quotes eld
\end_inset


\backslash
r 
\backslash
n
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset


\backslash
r
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset


\backslash
n
\begin_inset Quotes erd
\end_inset

 ; (All three line endings are recognized by BufferedReader.readLine)
\end_layout

\begin_layout Standard
command = uppercase | lowercase , { uppercase | lowercase | 
\begin_inset Quotes eld
\end_inset

_
\begin_inset Quotes erd
\end_inset

 } , space , {uppercase | lowercase | space | numeric | } , newline ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
port-number = ? all valid TCP port numbers ? ;
\end_layout

\begin_layout Section
Parameters
\end_layout

\begin_layout Standard
Here follows a list of parameter types.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
player-name = uppercase | lowercase | numeric , { uppercase | lowercase
 | numeric } ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
group-number = 2 * numeric;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
extension = uppercase | lowercase, { uppercase | lowercase | 
\begin_inset Quotes eld
\end_inset

_
\begin_inset Quotes erd
\end_inset

 } ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
extension-list = { space, extension } ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
column = col ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
chat-message = {uppercase | lowercase | numeric | space} ;
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
error-code = 3 * numeric;
\end_layout

\begin_layout Subsection
Additional constraints
\end_layout

\begin_layout Itemize
player-name should be unique across the server.
 The server SHOULD send an error to the client if this constraint is not
 fulfilled.
 The server MUST NOT accept the client if the name is not unique.
\end_layout

\begin_layout Itemize
the parameters used in the commands MUST conform to the above format.
 
\end_layout

\begin_layout Section
Game rules
\end_layout

\begin_layout Itemize
The amount of players is 2.
\end_layout

\begin_layout Itemize
The board is 7 columns wide and 6 rows high.
\end_layout

\begin_layout Itemize
The difficulty for the tournament AI is 10 seconds ( This is just a placeholder
 value which can be decided upon at a later time).
\end_layout

\begin_layout Section
Client states
\begin_inset CommandInset label
LatexCommand label
name "sec:Client-states"

\end_inset


\end_layout

\begin_layout Standard
During the lifetime of its connection to the server the client can be in
 a number of states.
 The state of the client determines the commands the client is allowed to
 send to the server and the commands the server is allowed to send to the
 client.
 It is possible for the client to be in multiple states at the same time.
 These states do not have to be implemented in the server implementation.
 They are however a way to reason about which command is defined to be used
 in which situation.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Connected The client has setup a TCP connection to the server but has not
 yet sent the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:join"

\end_inset

 command.
 A client can also be in this state when it has sent the join command but
 has received an 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:error"

\end_inset

 in response The client can not be in another state at the same time.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Joined The client has sent the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:join"

\end_inset

 command but has not yet received the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:accept"

\end_inset

 from the server.
 The client cannot be in another state at the same time.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Accepted The client has received the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:accept"

\end_inset

 from the server.
 The client stays in this state during the rest of the connection to the
 server.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Lobby The client is in the lobby state if it has been accepted by the server
 but is currently not in a game.
 The lobby and game state are therefore mutually exclusive.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Ready The client is in this state if it has sent the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:ready"

\end_inset

 command to the server.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Challenged The client is in this state if it has received the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:notify-challenge"

\end_inset

 command from the server.
 In order to be in this state the client must also be in the Lobby state
 and not in the Ready state.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Game The client is currently in a game with another client.
\end_layout

\begin_layout Section
Error codes
\end_layout

\begin_layout Standard
An error code consists of 3 digits.
 Error codes 0-99 are reserved for use by errors defined in this document.
 Error codes 100-999 can be used for protocol extensions not defined in
 this document.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
001 Generic error
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
002 Invalid move
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
003 Player disconnect
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
004 Invalid username
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
005 Cannot challenge player
\begin_inset CommandInset label
LatexCommand label
name "005-Cannot-challenge"

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
006 Invalid chat message
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
007 Invalid command
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
008 Command not valid in this context
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
009 Invalid parameter
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
010 Syntax error
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
011 Authentication required
\begin_inset CommandInset label
LatexCommand label
name "011 Authentication required"

\end_inset


\end_layout

\begin_layout Section
Commands
\end_layout

\begin_layout Standard
This section contains the commands defined by this document ordered by their
 function groups and direction.
 Every server and client MUST implement the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "sub:Core"

\end_inset

 group.
 If a client or server has signaled the other end of the connection it supports
 an optional function group it MUST implement the function group.
 The client or server MAY implement other function groups.
 A client or server MUST NOT send a command in an optional function group
 that is not acknowledged to be supported by the other end of the connection.
 
\end_layout

\begin_layout Subsection
Core
\begin_inset CommandInset label
LatexCommand label
name "sub:Core"

\end_inset


\end_layout

\begin_layout Subsubsection
Client -> Server
\end_layout

\begin_layout Paragraph
join
\begin_inset CommandInset label
LatexCommand label
name "par:join"

\end_inset


\end_layout

\begin_layout Standard
A client sends a join command when it wants to ask the server to connect.
 The server MUST send an accept command to the client signaling it has accepted
 the client's connection.
 The client MUST include the player name.
 The client MUST include the group number of the implementing group.
 The client SHOULD include the protocol extensions supported by it.
 The client MUST NOT send other commands to the server until it has received
 the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:accept"

\end_inset

 from the server.
 To send this command the client MUST be in the Connected state 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
join-command = 
\begin_inset Quotes eld
\end_inset

join
\begin_inset Quotes erd
\end_inset

, space, player-name , space , group-number, [extension-list] ;
\end_layout

\begin_layout Paragraph
ready
\begin_inset CommandInset label
LatexCommand label
name "par:ready"

\end_inset


\end_layout

\begin_layout Standard
After the server has accepted the client's connection, the server is waiting
 for the client to signal it is ready to play a game.
 When the client sends the ready command to the server the server SHOULD
 send the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:start-game"

\end_inset

 command if there is already another client waiting to play a game, otherwise
 the server SHOULD wait until another player sends the ready command and
 then send the two players the start game command.
 To send this command the client MUST be in the Lobby state 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
ready-command = 
\begin_inset Quotes eld
\end_inset

ready_for_game
\begin_inset Quotes erd
\end_inset

 ;
\end_layout

\begin_layout Paragraph
do move
\begin_inset CommandInset label
LatexCommand label
name "par:do-move"

\end_inset


\end_layout

\begin_layout Standard
This command is used by the client to signal the server it has decided on
 a move.
 This is only allowed if the server has previously sent the request move
 command and this client has since then not sent a do move command.
 The client MUST include the col parameter.
 To send this command the client MUST be in the Game state 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
do-move-command = 
\begin_inset Quotes eld
\end_inset

do_move
\begin_inset Quotes erd
\end_inset

 , space , col ;
\end_layout

\begin_layout Subsubsection
Server -> Client
\end_layout

\begin_layout Paragraph
accept
\begin_inset CommandInset label
LatexCommand label
name "par:accept"

\end_inset


\end_layout

\begin_layout Standard
After the server has received the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:join"

\end_inset

 command from a client, the server MUST send the accept command to the client
 or send an error.
 The server MUST NOT send this command before receiving the join command.
 The server MUST include the group number of the group that implemented
 the server.
 The server SHOULD include all supported protocol extensions in the accept
 command.
 The server MUST only send this command if the client is in the Joined state
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
accept-command = 
\begin_inset Quotes eld
\end_inset

accept
\begin_inset Quotes erd
\end_inset

, space , group-number , [extension-list] ;
\end_layout

\begin_layout Paragraph
start game
\begin_inset CommandInset label
LatexCommand label
name "par:start-game"

\end_inset


\end_layout

\begin_layout Standard
When two players have sent the 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:ready"

\end_inset

 command the server SHOULD send the start game command to these two players
 containing both the player names.
 The server MUST include two player names in the command.
 These two names MUST NOT be the same.
 The server MUST only send this command if the client is in the Ready state
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
start-game-command = 
\begin_inset Quotes eld
\end_inset

start_game
\begin_inset Quotes erd
\end_inset

, space , player-name, space , player-name ;
\end_layout

\begin_layout Paragraph
request move
\begin_inset CommandInset label
LatexCommand label
name "par:request-move"

\end_inset


\end_layout

\begin_layout Standard
When the server has determined that according to the game rules it is the
 turn of a Client to make a move, the server MUST send the request move
 command to all clients in the game with as argument the name of said client.
 The server MUST only send this command if the client is in the Game state
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
request-move-command = 
\begin_inset Quotes eld
\end_inset

request_move
\begin_inset Quotes erd
\end_inset

, space , player-name ;
\end_layout

\begin_layout Paragraph
done move
\begin_inset CommandInset label
LatexCommand label
name "par:done-move"

\end_inset


\end_layout

\begin_layout Standard
When the server has received a 
\begin_inset CommandInset ref
LatexCommand nameref
reference "par:do-move"

\end_inset

 command from a client and has determined that the move is valid it MUST
 send the done move command to all players in the game with the player name
 of the client which has done the move and the column of the move.
 The server MUST only send this command if the client is in the Game state
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
done-move-command = 
\begin_inset Quotes eld
\end_inset

done_move
\begin_inset Quotes erd
\end_inset

, space , player-name, space , col ;
\end_layout

\begin_layout Paragraph
game end
\begin_inset CommandInset label
LatexCommand label
name "par:game-end"

\end_inset


\end_layout

\begin_layout Standard
When the server has decided that according to the rules of Connect4 the
 game has ended in a draw or a player has won it MUST send the game end
 command to all players in the game.
 If the game ended in a draw the server MUST NOT include a player name.
 If a player has won the game the server MUST include the name of this player.
 After sending the game end command the server MUST place the clients in
 the Lobby state.
 The server MUST only send this command if the client is in the Game state
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
game-end-command = 
\begin_inset Quotes eld
\end_inset

game_end
\begin_inset Quotes erd
\end_inset

 , [space , player-name] ;
\end_layout

\begin_layout Paragraph
error
\begin_inset CommandInset label
LatexCommand label
name "par:error"

\end_inset


\end_layout

\begin_layout Standard
If the server has determined that the command received by the client would
 put the server in an error state the server MAY send an error command to
 the client.
 The client is allowed to handle the error command at it's own discretion.
 The server MUST only send this command if the client is in the Joined or
 Accepted state 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
error-command = 
\begin_inset Quotes eld
\end_inset

error
\begin_inset Quotes erd
\end_inset

 , space , error_code ;
\end_layout

\begin_layout Subsection
Lobby
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
lobby-extension-symbol = 
\begin_inset Quotes eld
\end_inset

Lobby
\begin_inset Quotes erd
\end_inset

 ;
\end_layout

\begin_layout Subsubsection
Server -> Client
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
state = 
\begin_inset Quotes eld
\end_inset

offline
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

lobby
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

lobby_ready
\begin_inset Quotes erd
\end_inset

 | 
\begin_inset Quotes eld
\end_inset

game
\begin_inset Quotes erd
\end_inset

 ;
\end_layout

\begin_layout Paragraph
state change
\begin_inset CommandInset label
LatexCommand label
name "par:state-change"

\end_inset


\end_layout

\begin_layout Standard
When a client which is in the lobby changes from one of the above mentioned
 states, the server MUST send the state change command to all clients supporting
 the Lobby extension.
 The server MUST NOT send this command to clients which are not in the Lobby
 state 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
 The server MUST include the player-name from which the state has changed.
 The server MUST include the state in which the client currently is.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
state-change-command = 
\begin_inset Quotes eld
\end_inset

state_change
\begin_inset Quotes erd
\end_inset

 , space , player-name, space, state ;
\end_layout

\begin_layout Subsection
Chat
\end_layout

\begin_layout Standard
Clients can send each other chat messages using the two chat commands.
 There are two levels of chat commands, global and local.
 The global command sends the message to all chat capable clients, the local
 only to the clients in the current context.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
chat-extension-symbol = 
\begin_inset Quotes eld
\end_inset

Chat
\begin_inset Quotes erd
\end_inset

 ;
\end_layout

\begin_layout Subsubsection
Client -> Server
\end_layout

\begin_layout Paragraph
global chat
\begin_inset CommandInset label
LatexCommand label
name "par:global-chat"

\end_inset


\end_layout

\begin_layout Standard
The client can send the global chat command to the server to send a message
 to all other clients supporting the Chat protocol extension.
 The server SHOULD send this message with the message command to those other
 clients and also to the sending client to signal receipt of the message.
 To send this command the client MUST be in the accepted state 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
global-chat-command = 
\begin_inset Quotes eld
\end_inset

chat_global
\begin_inset Quotes erd
\end_inset

 , space , chat-message ;
\end_layout

\begin_layout Paragraph
local chat
\begin_inset CommandInset label
LatexCommand label
name "par:local-chat"

\end_inset


\end_layout

\begin_layout Standard
The client can send the global chat command to the server to send a message
 to all other clients supporting the Chat protocol extension in the current
 context.
 The precise meaning of current context is left to the protocol implementers.
 When the client is in the Lobby state it is RECOMMENDED to let the current
 context be Lobby.
 When the client is in the Game state it is RECOMMENDED to let the current
 context be Game.
 The server SHOULD send this message with the message command to those other
 clients and also to the sending client to signal receipt of the message.
 To send this command the client MUST be in the Accepted state 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
local-chat-command = 
\begin_inset Quotes eld
\end_inset

chat_local
\begin_inset Quotes erd
\end_inset

 , space , chat-message ;
\end_layout

\begin_layout Subsubsection
Server -> Client
\end_layout

\begin_layout Paragraph
message
\end_layout

\begin_layout Standard
This command is used by the Server to send a chat message to a client in
 response to receipt of either the global chat or local chat command.
 This command MUST NOT be sent to clients which are not in the Accepted
 state 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
 The server may decide to which clients - in the Accepted state - it sends
 the command at its own discretion.
 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
message-command = 
\begin_inset Quotes eld
\end_inset

message
\begin_inset Quotes erd
\end_inset

 , space , player-name, space , chat-message ;
\end_layout

\begin_layout Subsection
Challenge
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
challenge-extension-symbol = 
\begin_inset Quotes eld
\end_inset

Challenge
\begin_inset Quotes erd
\end_inset

 ;
\end_layout

\begin_layout Subsubsection
Client -> Server
\end_layout

\begin_layout Paragraph
issue challenge
\end_layout

\begin_layout Standard
A client can send this command to a server to challenge another client for
 a game of Connect4.
 The server MUST notify the other client of the challenge or send an error.
 The client MUST be in the Lobby state 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sec:Client-states"

\end_inset

 to send this command.
 The client MUST include the player name and it MUST be the name belonging
 to the other client this client wishes to challenge.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
issue-challenge-command = 
\begin_inset Quotes eld
\end_inset

challenge
\begin_inset Quotes erd
\end_inset

 , space, player-name ;
\end_layout

\begin_layout Paragraph
respond challenge
\end_layout

\begin_layout Standard
When a client has been notified of a challenge by the server it can respond
 to the challenge by sending the respond challenge command to the server.
 The client MUST include a boolean answer and a player name and it MUST
 be the player name received in the corresponding notify challenge command.
 The client MUST be in the Challenged state to send this command.
 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
respond-challenge-command = 
\begin_inset Quotes eld
\end_inset

challenge_response
\begin_inset Quotes erd
\end_inset

 , space , player-name , boolean-answer ;
\end_layout

\begin_layout Subsubsection
Server -> Client
\end_layout

\begin_layout Paragraph
notify challenge
\begin_inset CommandInset label
LatexCommand label
name "par:notify-challenge"

\end_inset


\end_layout

\begin_layout Standard
When the server receives an issue challenge command from a client it MUST
 inform the mentioned client or send an error 
\begin_inset CommandInset ref
LatexCommand ref
reference "005-Cannot-challenge"

\end_inset

 when the client doesn't support the Challenge extension or is not in the
 Lobby state.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
notify-challenge-command = 
\begin_inset Quotes eld
\end_inset

challenge
\begin_inset Quotes erd
\end_inset

 , space , player-name ; 
\end_layout

\begin_layout Subsection
Leaderboard
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
leaderboard-extension-symbol = 
\begin_inset Quotes eld
\end_inset

Leaderboard
\begin_inset Quotes erd
\end_inset

 ;
\end_layout

\begin_layout Standard
At this time there is too much unknown to offer an proposal for an leaderboard
 protocol extension.
\end_layout

\begin_layout Subsubsection
Client -> Server
\end_layout

\begin_layout Subsection
Security
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
security-extension-symbol = 
\begin_inset Quotes eld
\end_inset

STARTTLS
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Servers which wish to enhance the security level of the server can support
 the security extension which will support both secure connections and authentic
ation of the server and the client.
 To enable the client and server to securely communicate the TLS 
\begin_inset CommandInset citation
LatexCommand cite
key "rfc5246"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "ietf-tls-docs"

\end_inset

 protocol will be used.
 The commands in this document merely serve the purpose of setting up a
 new secure connection.
 
\end_layout

\begin_layout Standard
A server which also wants to offer secured connections MUST listen to a
 second port for secured connections.
 
\end_layout

\begin_layout Subsubsection
Server -> Client
\end_layout

\begin_layout Paragraph
starttls
\end_layout

\begin_layout Standard
The server can send this command to a client it wishes to have a secure
 connection with.
 The client MUST be in the accepted state 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Client-states"

\end_inset

.
 The port number parameter MUST be supplied and it MUST be another port
 than the non-TLS port.
 The server MUST be listening for TLS connections on the given port.
 After receiving this command the client MUST disconnect and setup a secure
 connection with the server on the supplied port.
 It is RECOMMENDED that the server does not accept any commands from the
 client after sending the starttls command but rather sends an 011 Authenticatio
n required 
\begin_inset CommandInset ref
LatexCommand eqref
reference "011 Authentication required"

\end_inset

 error.
 The server and client MUST treat the secured connection as new and MUST
 discard any prior gathered state.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
starttls-command = 
\begin_inset Quotes eld
\end_inset

starttls
\begin_inset Quotes erd
\end_inset

, space , port-number ;
\end_layout

\begin_layout Section
Revisions
\end_layout

\begin_layout Enumerate
10-01-2015 v0.1: initial version of this document
\end_layout

\begin_layout Section
Proposed changes
\end_layout

\begin_layout Standard
During the lifetime of this protocol it is possible to propose changes and
 amendments by means of a message to wouter@woutertimmermans.nl.
 These propositions will be added to the document and after a discussion
 with the INF3 group a decision will be made about inclusion of this change
 in the protocol.
\end_layout

\begin_layout Itemize
Let the start_game command reflect player order by means of the order of
 the player names.
 If for instance 
\begin_inset Quotes eld
\end_inset

Wouter
\begin_inset Quotes erd
\end_inset

 is the first player and 
\begin_inset Quotes eld
\end_inset

Daniel
\begin_inset Quotes erd
\end_inset

 the second the start game command string would be 
\begin_inset Quotes eld
\end_inset

start_game Wouter Daniel
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
Let the error command have an optional message parameter in order to give
 more verbose errors.
\end_layout

\begin_layout Itemize
8.5 Leaderboard extension has preliminary status at this time.
\end_layout

\begin_layout Itemize
8.6 Security extension has preliminary status at this time
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "INF3 protocol references"
options "bibtotoc,plainurl"

\end_inset


\end_layout

\end_body
\end_document
